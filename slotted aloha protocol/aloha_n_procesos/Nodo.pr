/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy",4)*/
system Aloha;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy",1)*/
/*#include 'random.pr'*/

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy"(1),323(25,40))*/
SIGNAL
tic,
intencion(Boolean),
colision(Boolean),
mensaje,
respuesta(Boolean);
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy"(1),545(25,65))*/
SYNONYM 
MAXRTX Integer = 5,
RANURA Duration = 1,
SEMILLA RandomControl = DefineSeed(5);
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy"(1),548(25,85))*/
SYNONYM
N_nodos integer = external,
PG Real = external;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy"(1),542(75,145))*/
block Aloha referenced 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy"(1),557(25,100))*/
/* Definimos sinonimos (constantes) externamente ( =external).
Estos sinonimos seran leidos, bien desde teclado, bien desde
un fichero de sinonimos (.syn). 

Las definiciones externas permitiran cambiar los parametros PG y N_nodos
sin tener que compilar en cada simulacion. */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\aloha.ssy",4)*/
endsystem Aloha;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk",4)*/
block Aloha;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),122(67,119))*/
signalroute /*#E*/ 
clk from Canal to Emisor with 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),123(77,117))*/
tic;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),146(105,119))*/
signalroute /*#E*/ 
cln from Canal to Emisor with 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),147(115,117))*/
colision;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),131(84,94))*/
signalroute /*#E*/ 
tx from Emisor to Canal with 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),132(95,95))*/
intencion;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),206(107,155))*/
signalroute /*#E*/ 
ack from Emisor to Usuario with 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),207(107,162))*/
respuesta;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),194(87,155))*/
signalroute /*#E*/ 
msg from Usuario to Emisor with 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),195(87,162))*/
mensaje;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),116(45,75))*/
process Canal referenced 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),413(70,25))*/
/* Al comenzar existe un solo proceso Canal.
El proceso Canal creara N_nodos procesos emisores (entre 0 y 100).
Cada proceso emisor creara su correspondiente proceso usuario.

El par (n,m) al lado de cada proceso representan 
el numero minino y maximo de instancias de cada proceso.
Si se omite se crea una unica instancia de ese proceso. */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),119(65,125))*/
process Emisor(0,100) referenced;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk"(1),191(65,170))*/
process Usuario(0,100) referenced;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Sistema_aloha.sbk",4)*/
endblock Aloha;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr",4)*/
process Emisor;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),2432(5,25))*/
DCL
user Pid;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),2435(5,40))*/
DCL
estado Boolean,
intentos Integer:=0;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1859(135,155))*/
DCL
TOemisor integer := 0,
TCemisor integer := 0,
TPemisor integer := 0,
TSparcial, TStotal integer:= 0;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2429(30,15))*/
DCL
ranuras Integer,
k Integer;

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2402(20,45))*/
DCL
k_max Integer :=7; 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1805(60,15))*/
start /*#E*/ 
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1895(60,40))*/
create /*#E*/ 
Usuario 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1565(110,45))*/
/* Cada Emisor crea su correspondiente 
instancia de proceso Usuario.  */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1901(60,60))*/
task /*#E*/ 
user:=Offspring 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1559(110,60))*/
/* La variable user (del tipo PID) identifica
cada proceso Usuario creado por el proceso emisor.
Offspring es una variable de sistema y contiene 
el PID del ultimo proceso creado.  */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1913(60,75))*/
nextstate /*#E*/ 
Emisor_vacio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1913(60,75))*/
state /*#E*/ 
Emisor_vacio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1970(20,95))*/
input /*#E*/ 
Mensaje;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1976(20,115))*/
task {/*#E*/ 
k := 2;
intentos := 0;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1979(20,135))*/
task /*#E*/ 
TSParcial := 0;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1982(15,160))*/
nextstate /*#E*/ 
EnviaTX;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1925(60,95))*/
input /*#E*/ 
        tic;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1928(55,115))*/
output /*#E*/ 
intencion (false) to parent
 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1580(115,115))*/
/* Cuando llega un tic, si el emisor no tiene mensajes
que transmitir, envia intencion(false) al proceso 
que lo creo (parent) */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1940(60,140))*/
nextstate /*#E*/ 
mitad_vacio
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1913(60,75))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1940(60,140))*/
state /*#E*/ 
mitad_vacio
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1955(40,160))*/
save /*#E*/ 
mensaje;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1949(75,160))*/
input /*#E*/ 
colision(estado) 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1883(115,140))*/
/* Declaramos variables TOemisor, TCemisor, 
TPemisor, TSparcial y TStotal (fondo verde)
para realizar mediciones de G, S, L y Ts. */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1961(75,185))*/
nextstate /*#E*/ 
Emisor_vacio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(1),1940(60,140))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2120(70,15))*/
state /*#E*/ 
EnviaTX;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),1997(70,35))*/
input /*#E*/ 
tic 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),1544(100,15))*/
/* Cuando se ha recibido un mensaje
del usuario, y es tu ranura (backoff)  envias una 
señal de intencion al canal */

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),1538(100,75))*/
/* Envio mi intencion true al proceso
canal, que es el que me creo (parent) */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2003(65,55))*/
task {/*#E*/ 
TOemisor := TOemisor + 1;
TSparcial := TSparcial + 1;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2009(65,75))*/
output /*#E*/ 
Intencion(true) to parent;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2015(70,90))*/
nextstate /*#E*/ 
ficticio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2120(70,15))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2015(70,90))*/
state /*#E*/ 
ficticio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2021(65,115))*/
input /*#E*/ 
colision(estado) 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),1550(100,90))*/
/* Todos los procesos emisores tienen 
el mismo padre (el canal). El canal identifica 
a cada proceso emisor por su PID. */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2027(70,140))*/
decision /*#E*/ 
estado;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2036(25,147))*/
(false
):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2033(15,155))*/
task {/*#E*/ 
TCemisor := TCemisor + 1;
TSTotal := TSTotal + TSparcial;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2045(15,175))*/
output /*#E*/ 
respuesta(true) to user;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2039(20,195))*/
nextstate /*#E*/ 
Emisor_vacio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2057(127,147))*/
(true):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2054(110,155))*/
decision /*#E*/ 
intentos = MAXRTX;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2387(100,157))*/
(false):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2384(85,165))*/
join /*#E*/ 
Backoff 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),1553(50,185))*/
/* Cada proceso usuario es creado por su
correspodiente proceso emisor. La variable 
user (del tipo PID)  le dice al proceso emisor 
cual es el PID de su procesos usuario (user). 
El emisor envia las respuestas a su proceso usuario
 */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2072(157,165))*/
(true):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2069(140,175))*/
task {/*#E*/ 
TPEmisor := TPEmisor +1;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2075(140,190))*/
output /*#E*/ 
respuesta(false) to user;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2087(145,210))*/
nextstate /*#E*/ 
Emisor_vacio;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2054(110,155))*/
enddecision;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2027(70,140))*/
enddecision;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(2),2015(70,90))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2315(120,145))*/
state /*#E*/ 
ESPERA;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2321(120,160))*/
input /*#E*/ 
tic 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1496(120,70))*/
/* Se calcula un numero de ranuras aleatorio, 
que son las que hay que esperar antes 
de mandar la intencion de transmitir */

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1190(155,130))*/
/* Se establece un 
contador  de ranuras que 
para simular la espera */

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1502(15,140))*/
/* Cuando llega el turno (mi ranura) 
pasamos al estado 
pendiente de transmitir */

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1178(155,180))*/
/* Mientras se esta en 
espera  se envia
intencion a false */
;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2324(115,180))*/
output /*#E*/ 
intencion(false) to parent;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2390(120,200))*/
nextstate /*#E*/ 
MITAD_ESPERA;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2315(120,145))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2390(120,200))*/
state /*#E*/ 
MITAD_ESPERA;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2330(120,215))*/
input /*#E*/ 
colision(estado) 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1169(150,215))*/
/* Se consumen la señales
de colision del canal */
;
grst0:
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2294(80,120))*/
decision /*#E*/ 
ranuras  =0;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2318(122,122))*/
(true):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2312(120,130))*/
task {/*#E*/ 
ranuras:= ranuras -1;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2315(120,145))*/
nextstate /*#E*/ 
ESPERA;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2309(57,130))*/
(false):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2300(50,140))*/
task {/*#E*/ 
intentos := intentos+1;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2303(50,160))*/
nextstate /*#E*/ 
EnviaTX;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2294(80,120))*/
enddecision;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2390(120,200))*/
endstate;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2372(90,5))*/
connection /*#E*/ 
Backoff 
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1481(110,5))*/
/* Comienza el algoritmo de Backoff */

/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),1487(115,35))*/
/* backoff solo crece hasta (N_nodos-1),
para que K solo crezca hasta 2^(N_nodos-1) */
:
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2126(85,20))*/
task {/*#E*/ 
k := k*2;};
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2174(85,35))*/
decision /*#E*/ 
k >=k_max;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2261(62,45))*/
(true):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2258(55,50))*/
task /*#E*/ 
k := N_nodos;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2267(97,52))*/
(false):
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2174(85,35))*/
enddecision;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2264(75,70))*/
task /*#E*/ 
ranuras := RandInt(0,k-1,SEMILLA);
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2288(75,95))*/
task /*#E*/ 
TSParcial := TSParcial + ranuras;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2294(80,120))*/
join /*#E*/ 
grst0;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr"(3),2372(90,5))*/
endconnection Backoff;
/*#SDTREF(SDL,"C:\\Documents and Settings\\Firma\\Escritorio\\aloha_n_procesos\\Emisor.spr",4)*/
endprocess Emisor;
